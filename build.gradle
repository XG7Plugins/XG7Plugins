plugins {
    id 'java-library'
}

group = 'com'
version = '1.2.5.1'

repositories {
    mavenCentral()
    maven {
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = 'https://libraries.minecraft.net/'
    }
    maven {
        url = "https://repo.opencollab.dev/main/"
    }
    maven {
        url = "https://maven.elmakers.com/repository/"
    }
    maven {
        url = "https://repo.codemc.io/repository/maven-releases/"
    }
    maven {
        url = "https://jitpack.io"
    }
    maven {
        name = "sonatype-oss-snapshots1"
        url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {

    api("com.github.cryptomorin:XSeries:13.3.3")
    api("com.github.retrooper:packetevents-spigot:2.9.4")

    compileOnly 'io.netty:netty-all:4.1.111.Final'

    implementation 'com.mojang:authlib:1.5.25'
    compileOnly 'com.mojang:datafixerupper:4.0.26'

    implementation 'net.kyori:adventure-platform-bungeecord:4.3.2'

    implementation "com.github.ben-manes.caffeine:caffeine:2.1.1"

    implementation 'redis.clients:jedis:5.2.0'

    implementation 'org.mariadb.jdbc:mariadb-java-client:3.4.1'
    implementation group: 'com.mysql', name: 'mysql-connector-j', version: '9.3.0'
    implementation 'com.zaxxer:HikariCP:4.0.3'



}


def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.shadowJar {
    archiveFileName.set("${project.name}-${project.version}.jar")
    
    relocate("com.cryptomorin.xseries", "com.xg7plugins.libs.xseries")

    relocate("com.github.retrooper.packetevents", "com.xg7plugins.libs.packetevents")

    minimize {
        exclude(dependency("com.github.ben-manes.caffeine:.*"))
        exclude(dependency("redis.clients:.*"))
        exclude(dependency("com.zaxxer:HikariCP:.*"))
        exclude(dependency("com.mojang:authlib:.*"))
        exclude(dependency("com.mysql:mysql-connector-j:.*"))
        exclude(dependency("org.mariadb.jdbc:mariadb-java-client:.*"))

    }

    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude 'module-info.class'
    exclude 'META-INF/versions/**'
    exclude 'META-INF/LICENSE*'
    exclude 'META-INF/NOTICE*'



}

tasks.jar {
    enabled = false
}

artifacts {
    add("archives", tasks.shadowJar)
}



processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset = 'UTF-8'
    filesMatching('plugin.yml') {
        expand(props)
    }
}